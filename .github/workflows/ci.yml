name: Continuous Integration

on:
  push:
    branches: [main, next, develop]
  pull_request:
    branches: [main, next, develop]
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests'
        required: false
        default: true
        type: boolean
      run_lint:
        description: 'Run linting'
        required: false
        default: true
        type: boolean
      run_build:
        description: 'Run build'
        required: false
        default: true
        type: boolean

env:
  NODE_VERSION: '22'  # Latest LTS

jobs:
  lint:
    runs-on: ubuntu-latest
    if: ${{ inputs.run_lint != false }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Run ESLint
        run: npm run lint || echo "Linting issues found"
      
      - name: Run TypeScript check
        run: npm run type-check || echo "TypeScript issues found"
      
      - name: Check code formatting
        run: npm run format:check || echo "Formatting issues found"

  test:
    runs-on: ubuntu-latest
    if: ${{ inputs.run_tests != false }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  validate-translations:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Validate translations
        run: npm run i18n:validate
      
      - name: Check for missing translations
        run: |
          if [ -f translation-errors.log ]; then
            echo "❌ Translation errors found:"
            cat translation-errors.log
            exit 1
          else
            echo "✅ All translations are complete!"
          fi

  build:
    runs-on: ubuntu-latest
    if: ${{ inputs.run_build != false }}
    needs: [lint, test, validate-translations]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/.cache
          key: ${{ runner.os }}-build-${{ hashFiles('package-lock.json', 'src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Build project
        run: npm run build:prod
        env:
          NODE_ENV: production
      
      - name: Verify build
        run: |
          echo "🔍 Verifying build output..."
          
          # Check required files
          REQUIRED_FILES=("index.html" "robots.txt" "sitemap.xml" "llms.txt")
          for file in "${REQUIRED_FILES[@]}"; do
            if [ -f "dist/$file" ]; then
              echo "✅ $file exists"
            else
              echo "❌ $file missing"
              exit 1
            fi
          done
          
          # Check bundle size
          TOTAL_SIZE=$(find dist -name '*.js' -o -name '*.css' | xargs gzip -c | wc -c)
          TOTAL_SIZE_KB=$((TOTAL_SIZE / 1024))
          echo "📦 Bundle size: ${TOTAL_SIZE_KB} KB"
          
          if [ $TOTAL_SIZE_KB -gt 500 ]; then
            echo "❌ Bundle size too large: ${TOTAL_SIZE_KB} KB > 500 KB"
            exit 1
          else
            echo "✅ Bundle size acceptable: ${TOTAL_SIZE_KB} KB"
          fi
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.run_id }}
          path: dist/
          retention-days: 7

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Run security audit
        run: npm audit --audit-level=moderate
      
      - name: Check for vulnerabilities
        run: |
          if [ -f "package-lock.json" ]; then
            npm audit --json > audit-results.json || true
            VULNERABILITIES=$(jq '.vulnerabilities | length' audit-results.json)
            echo "Found $VULNERABILITIES vulnerabilities"
            
            if [ "$VULNERABILITIES" -gt 0 ]; then
              echo "⚠️  Vulnerabilities found, but continuing..."
            else
              echo "✅ No vulnerabilities found"
            fi
          fi

  performance:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.run_id }}
          path: dist/
      
      - name: Run performance tests
        run: |
          if [ -f "scripts/performance-test.js" ]; then
            npm run test:performance
          else
            echo "Performance tests not available"
          fi
      
      - name: Generate performance report
        run: |
          echo "📊 Performance Report" > performance-report.md
          echo "====================" >> performance-report.md
          echo "" >> performance-report.md
          echo "- **Bundle Size:** $(find dist -name '*.js' -o -name '*.css' | xargs gzip -c | wc -c | awk '{print int($1/1024)}') KB" >> performance-report.md
          echo "- **File Count:** $(find dist -type f | wc -l)" >> performance-report.md
          echo "- **Timestamp:** $(date -u)" >> performance-report.md
      
      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report-${{ github.run_id }}
          path: performance-report.md
          retention-days: 30

  summary:
    runs-on: ubuntu-latest
    needs: [lint, test, validate-translations, build, security]
    if: always()
    
    steps:
      - name: Generate CI summary
        run: |
          echo "## 🚀 CI Pipeline Summary" > ci-summary.md
          echo "" >> ci-summary.md
          echo "| Job | Status |" >> ci-summary.md
          echo "|-----|--------|" >> ci-summary.md
          echo "| Lint | ${{ needs.lint.result == 'success' && '✅' || '❌' }} |" >> ci-summary.md
          echo "| Test | ${{ needs.test.result == 'success' && '✅' || '❌' }} |" >> ci-summary.md
          echo "| Translations | ${{ needs.validate-translations.result == 'success' && '✅' || '❌' }} |" >> ci-summary.md
          echo "| Build | ${{ needs.build.result == 'success' && '✅' || '❌' }} |" >> ci-summary.md
          echo "| Security | ${{ needs.security.result == 'success' && '✅' || '❌' }} |" >> ci-summary.md
          echo "" >> ci-summary.md
          echo "**Overall Status:** ${{ needs.lint.result == 'success' && needs.test.result == 'success' && needs.validate-translations.result == 'success' && needs.build.result == 'success' && '✅ All checks passed' || '❌ Some checks failed' }}" >> ci-summary.md
      
      - name: Upload CI summary
        uses: actions/upload-artifact@v4
        with:
          name: ci-summary-${{ github.run_id }}
          path: ci-summary.md
          retention-days: 7
