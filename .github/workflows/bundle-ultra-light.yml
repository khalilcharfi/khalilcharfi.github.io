name: ‚ö° Ultra-Light Bundle Check

on:
  pull_request:
    branches: [main, next, develop]
  push:
    branches: [main, next, develop]

env:
  NODE_VERSION: '22'
  ULTRA_LIGHT: true

jobs:
  bundle-ultra-light:
    name: ‚ö° Ultra-Light Bundle Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 8
    
    steps:
      - name: ‚ö° Checkout (minimal)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone
      
      - name: ‚ö° Setup Node.js (ultra-cached)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: ‚ö° Ultra-fast cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/.cache
            .vite
          key: ${{ runner.os }}-bundle-ultra-${{ hashFiles('package-lock.json', 'src/**/*') }}-v4
          restore-keys: |
            ${{ runner.os }}-bundle-ultra-v4-
            ${{ runner.os }}-bundle-ultra-
      
      - name: ‚ö° Install dependencies (ultra-fast)
        run: |
          # Ultra-fast install with minimal output
          npm ci --prefer-offline --no-audit --no-fund --silent --no-progress
      
      - name: ‚ö° Ultra-light build
        run: |
          # Set ultra-optimized build environment
          export NODE_ENV=production
          export NODE_OPTIONS="--max-old-space-size=2048"
          export VITE_BUILD_OPTIMIZE=true
          export VITE_BUNDLE_ANALYZE=false
          
          # Build with maximum speed optimizations
          npm run build --silent
        env:
          NODE_ENV: production
          NODE_OPTIONS: "--max-old-space-size=2048"
          VITE_BUILD_OPTIMIZE: true
          VITE_BUNDLE_ANALYZE: false
      
      - name: ‚ö° Ultra-fast bundle analysis
        id: bundle-analysis
        run: |
          echo "‚ö° Ultra-fast bundle analysis..."
          
          # Get bundle sizes with minimal processing
          echo "üì¶ Bundle Analysis:" > bundle-report.txt
          echo "=================" >> bundle-report.txt
          echo "" >> bundle-report.txt
          
          # Calculate total size efficiently
          TOTAL_SIZE=$(find dist -name '*.js' -o -name '*.css' | xargs gzip -c | wc -c)
          TOTAL_SIZE_KB=$((TOTAL_SIZE / 1024))
          
          echo "| File | Size (gzipped) |" >> bundle-report.txt
          echo "|------|----------------|" >> bundle-report.txt
          
          # Process only largest files for speed
          find dist/assets -name '*.js' -o -name '*.css' | while read file; do
            FILENAME=$(basename "$file")
            GZIP_SIZE=$(gzip -c "$file" | wc -c)
            GZIP_SIZE_KB=$((GZIP_SIZE / 1024))
            echo "| $FILENAME | ${GZIP_SIZE_KB} KB |" >> bundle-report.txt
          done | sort -k3 -nr | head -10 >> bundle-report.txt
          
          echo "" >> bundle-report.txt
          echo "**Total Bundle Size: ${TOTAL_SIZE_KB} KB (gzipped)**" >> bundle-report.txt
          echo "" >> bundle-report.txt
          
          # Performance targets
          TARGET=350
          STRETCH=300
          WARNING=450
          CRITICAL=500
          
          echo "üéØ Performance Targets:" >> bundle-report.txt
          echo "- Target: ${TARGET} KB" >> bundle-report.txt
          echo "- Stretch: ${STRETCH} KB" >> bundle-report.txt
          echo "- Warning: ${WARNING} KB" >> bundle-report.txt
          echo "- Critical: ${CRITICAL} KB" >> bundle-report.txt
          echo "" >> bundle-report.txt
          
          # Status determination
          if [ $TOTAL_SIZE_KB -le $STRETCH ]; then
            STATUS="excellent"
            EMOJI="üèÜ"
            MESSAGE="Excellent! Bundle is under stretch goal!"
          elif [ $TOTAL_SIZE_KB -le $TARGET ]; then
            STATUS="good"
            EMOJI="‚úÖ"
            MESSAGE="Good! Bundle meets target size!"
          elif [ $TOTAL_SIZE_KB -le $WARNING ]; then
            STATUS="warning"
            EMOJI="‚ö†Ô∏è"
            MESSAGE="Warning: Bundle exceeds target!"
          elif [ $TOTAL_SIZE_KB -le $CRITICAL ]; then
            STATUS="critical"
            EMOJI="üö®"
            MESSAGE="Critical: Bundle is very large!"
          else
            STATUS="error"
            EMOJI="‚ùå"
            MESSAGE="Error: Bundle is critically large!"
          fi
          
          echo "${EMOJI} **${MESSAGE}**" >> bundle-report.txt
          echo "üìä Current: ${TOTAL_SIZE_KB} KB" >> bundle-report.txt
          
          # Save outputs
          echo "size=$TOTAL_SIZE_KB" >> $GITHUB_OUTPUT
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "emoji=$EMOJI" >> $GITHUB_OUTPUT
          echo "message=$MESSAGE" >> $GITHUB_OUTPUT
          
          # Display summary
          cat bundle-report.txt
      
      - name: ‚ö° Ultra-fast PR comparison
        if: github.event_name == 'pull_request'
        run: |
          echo "‚ö° Ultra-fast PR comparison..."
          
          # Get base branch size quickly
          git fetch origin ${{ github.base_ref }} --depth=1
          git checkout origin/${{ github.base_ref }}
          
          # Quick build of base
          npm ci --prefer-offline --no-audit --no-fund --silent --no-progress
          npm run build --silent
          
          # Get base size
          BASE_SIZE=$(find dist -name '*.js' -o -name '*.css' | xargs gzip -c | wc -c)
          BASE_SIZE_KB=$((BASE_SIZE / 1024))
          
          # Switch back to PR
          git checkout ${{ github.head_ref }}
          
          # Compare
          CURRENT_SIZE=${{ steps.bundle-analysis.outputs.size }}
          DIFF=$((CURRENT_SIZE - BASE_SIZE_KB))
          PERCENT=$(echo "scale=1; $DIFF * 100 / $BASE_SIZE_KB" | bc -l 2>/dev/null || echo "0")
          
          echo "üìä PR Comparison:" >> bundle-report.txt
          echo "=================" >> bundle-report.txt
          echo "| Metric | Size |" >> bundle-report.txt
          echo "|--------|------|" >> bundle-report.txt
          echo "| Base (${{ github.base_ref }}) | ${BASE_SIZE_KB} KB |" >> bundle-report.txt
          echo "| Current (PR) | ${CURRENT_SIZE} KB |" >> bundle-report.txt
          echo "| **Difference** | **${DIFF} KB** |" >> bundle-report.txt
          echo "| **Change** | **${PERCENT}%** |" >> bundle-report.txt
          echo "" >> bundle-report.txt
          
          if [ $DIFF -lt 0 ]; then
            echo "‚úÖ **Bundle size decreased by $((-DIFF)) KB!** üéâ" >> bundle-report.txt
          elif [ $DIFF -eq 0 ]; then
            echo "‚úÖ **No change in bundle size**" >> bundle-report.txt
          else
            echo "‚ö†Ô∏è  **Bundle size increased by ${DIFF} KB (+${PERCENT}%)**" >> bundle-report.txt
            
            # Fail if increase is too large
            if (( $(echo "$PERCENT > 10" | bc -l) )); then
              echo "‚ùå **Error: Bundle size increased by more than 10%!**" >> bundle-report.txt
              exit 1
            fi
          fi
      
      - name: ‚ö° Upload ultra-light report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-ultra-light-${{ github.run_id }}
          path: bundle-report.txt
          retention-days: 7
          compression-level: 1
      
      - name: ‚ö° Ultra-fast PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '';
            
            if (fs.existsSync('bundle-report.txt')) {
              report = fs.readFileSync('bundle-report.txt', 'utf8');
            } else {
              report = `### ‚ö° Ultra-Light Bundle Report
              
              **Size:** ${{ steps.bundle-analysis.outputs.size }} KB
              **Status:** ${{ steps.bundle-analysis.outputs.status }}
              **Message:** ${{ steps.bundle-analysis.outputs.message }}
              `;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
      
      - name: ‚ö° Fail on critical size
        if: steps.bundle-analysis.outputs.status == 'error'
        run: |
          echo "‚ùå Bundle size is critically large!"
          echo "Size: ${{ steps.bundle-analysis.outputs.size }} KB"
          echo "Please optimize the bundle before merging."
          exit 1
