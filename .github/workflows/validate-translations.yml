name: Validate Translations

on:
  push:
    branches: [main, next, develop]
  pull_request:
    branches: [main, next, develop]
  workflow_dispatch:
    inputs:
      check_missing:
        description: 'Check for missing translations'
        required: false
        default: true
        type: boolean
      check_consistency:
        description: 'Check translation consistency'
        required: false
        default: true
        type: boolean
      check_quality:
        description: 'Check translation quality'
        required: false
        default: false
        type: boolean

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      has-errors: ${{ steps.validation.outputs.has-errors }}
      missing-count: ${{ steps.validation.outputs.missing-count }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'  # Latest LTS
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Cache translation files
        uses: actions/cache@v4
        with:
          path: |
            src/features/i18n/data/translations.ts
            translations.ts
          key: ${{ runner.os }}-translations-${{ hashFiles('**/translations.ts') }}
          restore-keys: |
            ${{ runner.os }}-translations-
      
      - name: Validate translation completeness
        id: completeness
        run: |
          echo "üîç Validating translation completeness..."
          npm run i18n:validate > validation-output.txt 2>&1
          VALIDATION_EXIT_CODE=$?
          
          if [ $VALIDATION_EXIT_CODE -eq 0 ]; then
            echo "‚úÖ All translations are complete!"
            echo "has-errors=false" >> $GITHUB_OUTPUT
            echo "missing-count=0" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Translation validation failed!"
            cat validation-output.txt
            
            # Extract missing count from output
            MISSING_COUNT=$(grep -o "Missing Keys: [0-9]*" validation-output.txt | grep -o "[0-9]*" || echo "0")
            echo "missing-count=$MISSING_COUNT" >> $GITHUB_OUTPUT
            echo "has-errors=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Check for missing translations
        if: ${{ inputs.check_missing != false }}
        run: |
          echo "üîç Checking for missing translations..."
          
          if [ -f translation-errors.log ]; then
            echo "‚ùå Translation errors found:"
            cat translation-errors.log
            exit 1
          else
            echo "‚úÖ No translation errors found!"
          fi
      
      - name: Check translation consistency
        if: ${{ inputs.check_consistency != false }}
        run: |
          echo "üîç Checking translation consistency..."
          
          # Check for inconsistent key structures
          npm run i18n:validate -- --check-consistency || echo "Consistency check not available"
          
          # Check for empty translations
          EMPTY_TRANSLATIONS=$(find . -name "*.ts" -exec grep -l "''" {} \; | grep -v node_modules | wc -l)
          if [ $EMPTY_TRANSLATIONS -gt 0 ]; then
            echo "‚ö†Ô∏è  Found $EMPTY_TRANSLATIONS files with empty strings"
          fi
      
      - name: Check translation quality
        if: ${{ inputs.check_quality == true }}
        run: |
          echo "üîç Checking translation quality..."
          
          # Check for placeholder text
          PLACEHOLDERS=$(grep -r "TODO\|FIXME\|XXX" src/features/i18n/ || true)
          if [ -n "$PLACEHOLDERS" ]; then
            echo "‚ö†Ô∏è  Found placeholder text in translations:"
            echo "$PLACEHOLDERS"
          fi
          
          # Check for very short translations (potential issues)
          SHORT_TRANSLATIONS=$(grep -r ":\s*'[^']\{1,3\}'" src/features/i18n/ || true)
          if [ -n "$SHORT_TRANSLATIONS" ]; then
            echo "‚ö†Ô∏è  Found very short translations (may need review):"
            echo "$SHORT_TRANSLATIONS"
          fi
      
      - name: Generate translation report
        if: always()
        run: |
          echo "üìä Translation Validation Report" > translation-report.md
          echo "=================================" >> translation-report.md
          echo "" >> translation-report.md
          echo "- **Branch:** ${{ github.ref_name }}" >> translation-report.md
          echo "- **Commit:** ${{ github.sha }}" >> translation-report.md
          echo "- **Missing Keys:** ${{ steps.completeness.outputs.missing-count }}" >> translation-report.md
          echo "- **Has Errors:** ${{ steps.completeness.outputs.has-errors }}" >> translation-report.md
          echo "- **Timestamp:** $(date -u)" >> translation-report.md
          echo "" >> translation-report.md
          
          if [ -f validation-output.txt ]; then
            echo "## Validation Output" >> translation-report.md
            echo "\`\`\`" >> translation-report.md
            cat validation-output.txt >> translation-report.md
            echo "\`\`\`" >> translation-report.md
          fi
      
      - name: Upload translation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: translation-report-${{ github.run_id }}
          path: |
            translation-report.md
            validation-output.txt
            translation-errors.log
          retention-days: 30
      
      - name: Comment PR (if applicable)
        if: github.event_name == 'pull_request' && steps.completeness.outputs.has-errors == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '';
            
            if (fs.existsSync('translation-report.md')) {
              report = fs.readFileSync('translation-report.md', 'utf8');
            } else {
              report = `### ‚ùå Translation Validation Failed
              
              Missing keys: ${{ steps.completeness.outputs.missing-count }}
              
              Please run \`npm run i18n:fix-missing\` to add missing translations.
              `;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
      
      - name: Fail on errors
        if: steps.completeness.outputs.has-errors == 'true'
        run: |
          echo "‚ùå Translation validation failed!"
          echo "Missing keys: ${{ steps.completeness.outputs.missing-count }}"
          echo "Please run 'npm run i18n:fix-missing' to add missing translations."
          exit 1