name: Bundle Size Check

on:
  pull_request:
    branches: [main, next, develop]
  push:
    branches: [main, next, develop]

jobs:
  check-bundle-size:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for comparison
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build current version
        run: npm run build
      
      - name: Get current bundle size
        id: current-size
        run: |
          # Get total gzipped size
          TOTAL_SIZE=$(find dist -name '*.js' -o -name '*.css' | xargs gzip -c | wc -c)
          TOTAL_SIZE_KB=$((TOTAL_SIZE / 1024))
          
          # Get individual chunk sizes
          echo "üì¶ Current Bundle Sizes:"
          echo ""
          echo "| File | Size (gzipped) |"
          echo "|------|----------------|"
          
          find dist/assets -name '*.js' -type f | while read file; do
            FILENAME=$(basename "$file")
            GZIP_SIZE=$(gzip -c "$file" | wc -c)
            GZIP_SIZE_KB=$((GZIP_SIZE / 1024))
            echo "| $FILENAME | ${GZIP_SIZE_KB} KB |"
          done
          
          echo ""
          echo "**Total Bundle Size: ${TOTAL_SIZE_KB} KB (gzipped)**"
          echo ""
          
          # Save for comparison
          echo "size=$TOTAL_SIZE_KB" >> $GITHUB_OUTPUT
          echo "${TOTAL_SIZE_KB}" > current-size.txt
      
      - name: Check against target
        run: |
          CURRENT_SIZE=${{ steps.current-size.outputs.size }}
          TARGET_SIZE=350
          STRETCH_TARGET=300
          
          echo "### üéØ Bundle Size Report"
          echo ""
          echo "- **Current:** ${CURRENT_SIZE} KB"
          echo "- **Target:** ${TARGET_SIZE} KB"
          echo "- **Stretch Goal:** ${STRETCH_TARGET} KB"
          echo ""
          
          if [ $CURRENT_SIZE -le $STRETCH_TARGET ]; then
            echo "‚úÖ **Excellent!** Bundle is under stretch goal!"
            echo "üèÜ Savings: $((TARGET_SIZE - CURRENT_SIZE)) KB under target"
          elif [ $CURRENT_SIZE -le $TARGET_SIZE ]; then
            echo "‚úÖ **Good!** Bundle meets target size!"
            echo "üìä Savings: $((TARGET_SIZE - CURRENT_SIZE)) KB under target"
          else
            echo "‚ö†Ô∏è  **Warning:** Bundle exceeds target!"
            echo "üìà Over by: $((CURRENT_SIZE - TARGET_SIZE)) KB"
            
            # Don't fail the build, just warn
            if [ $CURRENT_SIZE -gt 450 ]; then
              echo "‚ùå **Error:** Bundle is critically large (>450 KB)!"
              exit 1
            fi
          fi
      
      - name: Compare with base branch (PR only)
        if: github.event_name == 'pull_request'
        run: |
          # Checkout base branch
          git fetch origin ${{ github.base_ref }}
          git checkout origin/${{ github.base_ref }}
          
          # Install and build base
          npm ci --prefer-offline
          npm run build
          
          # Get base size
          BASE_SIZE=$(find dist -name '*.js' -o -name '*.css' | xargs gzip -c | wc -c)
          BASE_SIZE_KB=$((BASE_SIZE / 1024))
          
          # Checkout PR branch again
          git checkout ${{ github.head_ref }}
          
          # Compare
          CURRENT_SIZE=${{ steps.current-size.outputs.size }}
          DIFF=$((CURRENT_SIZE - BASE_SIZE_KB))
          
          echo "### üìä Bundle Size Comparison"
          echo ""
          echo "| Metric | Size |"
          echo "|--------|------|"
          echo "| Base (${{ github.base_ref }}) | ${BASE_SIZE_KB} KB |"
          echo "| Current (PR) | ${CURRENT_SIZE} KB |"
          echo "| **Difference** | **${DIFF} KB** |"
          echo ""
          
          if [ $DIFF -lt 0 ]; then
            echo "‚úÖ **Bundle size decreased by $((-DIFF)) KB!** üéâ"
          elif [ $DIFF -eq 0 ]; then
            echo "‚úÖ **No change in bundle size**"
          else
            PERCENT=$(echo "scale=1; $DIFF * 100 / $BASE_SIZE_KB" | bc)
            echo "‚ö†Ô∏è  **Bundle size increased by ${DIFF} KB (+${PERCENT}%)**"
            
            if (( $(echo "$PERCENT > 5" | bc -l) )); then
              echo "‚ùå **Error:** Bundle size increased by more than 5%!"
              exit 1
            fi
          fi
      
      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            dist/bundle-analysis.html
            current-size.txt
          retention-days: 30
      
      - name: Comment PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const size = fs.readFileSync('current-size.txt', 'utf8').trim();
            
            const comment = `### üì¶ Bundle Size Report
            
            **Current Size:** ${size} KB (gzipped)
            **Target:** 350 KB
            **Stretch Goal:** 300 KB
            
            [View detailed bundle analysis](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

