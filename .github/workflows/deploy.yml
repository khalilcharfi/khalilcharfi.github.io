name: üöÄ Build and Deploy to GitHub Pages

on:
  push:
    branches: [main]  # change 'main' to your source branch if needed
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "deploy-${{ github.ref_name }}-${{ github.event.head_commit.id }}"
  cancel-in-progress: true

env:
  NODE_VERSION: '22'

jobs:
  build-and-deploy:
    name: üöÄ Build and Deploy to GitHub Pages
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: ‚ö° Checkout source branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: ‚ö° Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Uncomment and adjust the following lines if you have dependencies
      - name: ‚ö° Install dependencies
        run: npm ci

      # Adjust this step to your actual build command and output directory
      - name: ‚ö° Build project
        run: npm run build

      # Upload the build output (change 'dist' to your actual build output directory)
      - name: ‚ö° Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'  # change this if your output directory is not 'dist'

      - name: ‚ö° Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: ‚ö° Verify deployment
        run: |
          echo "üöÄ Deployment completed!"
          echo "URL: ${{ steps.deployment.outputs.page_url }}"

          sleep 10

          if curl -f -s --max-time 15 "${{ steps.deployment.outputs.page_url }}" > /dev/null; then
            echo "‚úÖ Site is accessible"
          else
            echo "‚ö†Ô∏è  Site may not be fully propagated yet (this is normal)"
          fi
